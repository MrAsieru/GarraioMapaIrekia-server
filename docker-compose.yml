services:
  nginx:
    image: "nginx:1.25.2-alpine"
    container_name: "nginx"
    restart: "always"
    ports:
      - 80:80
      - 443:443
      - 27017:27017 # Para poder acceder a mongodb mientras se desarrolla
    volumes:
      # Sin SSL
      # - ./nginx/nginx.conf:/etc/nginx/nginx-.conf
      
      # Con SSL
      - ./nginx/nginx.conf:/etc/nginx/nginx-ssl.conf
      - ./ssl:/etc/ssl:ro
    depends_on:
      - martin
      - api
      - web-app
    networks:
      - network
  martin:
    container_name: "martin"
    command:
    - "/tiles"
    image: "ghcr.io/maplibre/martin:main"
    restart: "always"
    ports:
    - "3000"
    volumes:
    - "./tiles:/tiles"
    networks:
      - network
  mongodb:
    container_name: "mongodb"
    image: "mongodb/mongodb-community-server:latest"
    ports:
      - "27017"
    restart: "always"
    env_file: mongodb/mongodb.env
    volumes:
      - mongodatabase:/data/db
      - ./mongodb/init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh:ro
    networks:
      - network
  api:
    container_name: "api"
    build: "./api"
    restart: "always"
    env_file: mongodb/mongodb.env
    ports:
      - "8081"
    networks:
      - network
  web-app:
    container_name: "webapp"
    build: "./web"
    restart: "always"
    ports:
      - "8080"
    volumes:
      - ./web/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - network
volumes:
  mongodatabase:
    name: mongodatabase
networks:
  network:
    driver: bridge
version: '3.7'